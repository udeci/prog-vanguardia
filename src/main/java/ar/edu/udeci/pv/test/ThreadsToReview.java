package ar.edu.udeci.pv.test;

import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;

public class ThreadsToReview {

    //cmd  java -cp /Users/alejandro.vazquez/.m2/repository/org/hsqldb/hsqldb/2.5.1/hsqldb-2.5.1.jar org.hsqldb.util.DatabaseManagerSwing
    public static void main(String[] args) throws SQLException, ClassNotFoundException {
        Scanner scanner = new Scanner(System.in);
        String read = "";
        createConnection();
        do{
            read = scanner.nextLine();
            if(!read.equals("")) {
                Connection connection = null;
                try {
                    Class.forName("org.hsqldb.jdbc.JDBCDriver");
                    String url = "jdbc:hsqldb:mem:.books";
                    connection = DriverManager.getConnection(url,"SA","");
                } catch (Exception e) {
                    e.printStackTrace();
                }
                ThreadsMyThread t1 = new ThreadsMyThread(read, connection);
                t1.start();
            }
        }while(!read.equals("FIN"));
        showSelect();
    }

    public static void createConnection() throws ClassNotFoundException, SQLException{
        Class.forName("org.hsqldb.jdbcDriver");
        Connection connection = DriverManager.getConnection("jdbc:hsqldb:mem:.books");
        try {
            Statement st  = connection.createStatement();
            String table = "CREATE TABLE book("+
                    "id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,"+
                    "date Timestamp NULL ,"+
                    "isbn varchar(10) NOT NULL"+
                    ")";
            st.execute(table);
        } catch (Exception ex){
        }
    }

    public static void showSelect() throws ClassNotFoundException, SQLException{
        Class.forName("org.hsqldb.jdbcDriver");
        Connection connection = DriverManager.getConnection("jdbc:hsqldb:mem:.books");
        try {
            Statement st  = connection.createStatement();
            String table = "SELECT * FROM book ";
            ResultSet resultSet = st.executeQuery(table);
            while (resultSet.next()) {
                System.out.println(resultSet.getTimestamp(2) + " " + resultSet.getString(3) );
            }
        } catch (Exception ex){
        }
    }

    static class ThreadsMyThread extends Thread {

        public String isbn;
        private Connection connection;
        private String sqlInsert = "INSERT INTO book (date, isbn) VALUES (?,?)";

        public ThreadsMyThread(String isbn, Connection connection){
            this.isbn = isbn;
            this.connection = connection;
        }

        public void run(){
            try {
                PreparedStatement statement = connection.prepareStatement(sqlInsert);
                Date date = new Date();
                SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
                String strDate= formatter.format(date);
                System.out.println(strDate);
                statement.setTimestamp(1, new Timestamp(date.getTime()));
                statement.setString(2, isbn);
                statement.execute();
            } catch (Exception e) {
            }
        }
    }
}
